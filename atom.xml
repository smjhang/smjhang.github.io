<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>web development</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://smjhang.github.io/"/>
  <updated>2016-11-10T17:43:21.037Z</updated>
  <id>https://smjhang.github.io/</id>
  
  <author>
    <name>Siou-Ming Jhang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HTML5 Server Send Event</title>
    <link href="https://smjhang.github.io/2016/09/08/server-send-event/"/>
    <id>https://smjhang.github.io/2016/09/08/server-send-event/</id>
    <published>2016-09-08T14:49:42.000Z</published>
    <updated>2016-11-10T17:43:21.037Z</updated>
    
    <content type="html"><![CDATA[<h1 id="簡介"><a href="#簡介" class="headerlink" title="簡介"></a>簡介</h1><p>HTML 5 Server Send Event (SSE) 是一種將資料從伺服器端推送到瀏覽器端的技術。與 Ajax polling 這種多次發送 HTTP 請求的的方式相比，SSE 只需要一次的 HTTP 請求，因此能減少連線次數及傳輸的資料量、降低伺服器的負擔，並讓使用者得到更即時的資訊。<br>而與 Web Socket 相較，它沿用 HTTP 協定，不需要再額外建立專門處理其他協定的伺服端程式，直接沿用原本的網頁伺服器（如：Apache, Nginx）即可。所以無論是在程式開發上還是維運管理上都要簡易很多。<br>因此，如果只需要單向的從伺服器到瀏覽器的推送，就不需要使用 Web Socket，可以只使用 SSE。接續 <a href="/2016/07/27/redis-notification/">Redis Notification</a> 中提到的 Redis 通知 PHP 程式的技術，本篇將展示如何使用 SSE 將 Redis 的更新同步到瀏覽器，並使用 ECMAScript 2015 的新功能來組織程式。</p>
<a id="more"></a>
<h1 id="HTML5-Server-Send-Event-SSE"><a href="#HTML5-Server-Send-Event-SSE" class="headerlink" title="HTML5 Server Send Event (SSE)"></a>HTML5 Server Send Event (SSE)</h1><p>實作 SSE 有三個要點，首先是伺服器端的網頁程式必須要發送 SSE 專屬的內容類型，然後是傳輸的內容必須依照 SSE 的格式撰寫，最後是瀏覽器接收到訊息後的處理。</p>
<h2 id="伺服器端-PHP-程式範例"><a href="#伺服器端-PHP-程式範例" class="headerlink" title="伺服器端 PHP 程式範例"></a>伺服器端 PHP 程式範例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="comment"># 將回傳的內容類型指定為 text/event-stream</span></div><div class="line">header(<span class="string">'Content-Type: text/event-stream'</span>);</div><div class="line"><span class="comment"># 避免瀏覽器快取 SSE 訊息，以保證最新的資訊能被接收到</span></div><div class="line">header(<span class="string">'Cache-Control: no-cache'</span>); </div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 將要回傳的訊息整理程指定的格式並輸出</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> string $data 要送出的資料</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendData</span><span class="params">($data)</span> </span>&#123;</div><div class="line">  <span class="keyword">echo</span> <span class="string">"data: $data \n\n"</span>;</div><div class="line">  <span class="comment">// 避免 PHP 緩衝輸出，讓資料能夠即時輸出</span></div><div class="line">  ob_flush();</div><div class="line">  flush();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</div><div class="line">    $serverTime = time();</div><div class="line">    sendData(<span class="string">'server time: '</span> . date(<span class="string">"h:i:s"</span>, time()));</div><div class="line">    <span class="comment">// 避免輸出太快</span></div><div class="line">    sleep(<span class="number">1</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="資料格式"><a href="#資料格式" class="headerlink" title="資料格式"></a>資料格式</h2><p>SSE 的每個訊息由以下欄位構成：<br>event - 如果該訊息是一個事件通知，則此欄位代表事件的名稱，非必要欄位。<br>data - 訊息的資訊，必要欄位，一個訊息可以有多個 data 欄位。<br>id - 指定訊息的 id，可以讓接收者辨識目前的訊息，以便了解當前接收進度，非必要欄位。<br>retry - 指定從該訊息後，當瀏覽器斷線時，重新連接的間格時間，單位是毫秒，非必要欄位。<br>其中每個欄位以一個換行符號 \n 分隔，而每個訊息最後以兩個換行符號分隔。<br>範例：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">event: userconnect</div><div class="line">data: &#123;<span class="string">"username"</span>: <span class="string">"bobby"</span>, <span class="string">"time"</span>: <span class="string">"02:33:48"</span>&#125;</div><div class="line"></div><div class="line">data: Here's a system message <span class="keyword">of</span> <span class="keyword">some</span> kind <span class="keyword">that</span> will <span class="keyword">get</span> used</div><div class="line">data: <span class="keyword">to</span> accomplish <span class="keyword">some</span> task.</div><div class="line"></div><div class="line">event: usermessage</div><div class="line">data: &#123;<span class="string">"username"</span>: <span class="string">"bobby"</span>, <span class="string">"time"</span>: <span class="string">"02:34:11"</span>, <span class="string">"text"</span>: <span class="string">"Hi everyone."</span>&#125;</div></pre></td></tr></table></figure></p>
<h2 id="瀏覽器端程式範例"><a href="#瀏覽器端程式範例" class="headerlink" title="瀏覽器端程式範例"></a>瀏覽器端程式範例</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="comment">// 設定發送 SSE 訊息的伺服器端程式的 URL</span></div><div class="line">    <span class="keyword">var</span> source = <span class="keyword">new</span> EventSource(<span class="string">'server.php'</span>);</div><div class="line">    <span class="comment">// 設定當沒有指定 event 的 SSE 訊息發送過來時的處理函數</span></div><div class="line">    source.onmessage = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">      <span class="built_in">document</span>.body.innerHTML += e.data + <span class="string">'&lt;br&gt;'</span>;</div><div class="line">    &#125;;</div><div class="line">    <span class="comment">// 設定當 event 欄位的值是 usermessage 的 SSE 訊息發送過來時的處理函數</span></div><div class="line">    source.addEventListener(<span class="string">'usermessage'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">      <span class="keyword">var</span> data = <span class="built_in">JSON</span>.parse(e.data);</div><div class="line">      <span class="built_in">console</span>.log(data.msg);</div><div class="line">    &#125;, <span class="literal">false</span>);</div><div class="line">    </div><div class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>詳細的 EventSource 用法可參考 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events" target="_blank" rel="external">Using server-sent events</a></p>
<h1 id="Redis-Notification-即時顯示"><a href="#Redis-Notification-即時顯示" class="headerlink" title="Redis Notification 即時顯示"></a>Redis Notification 即時顯示</h1><p>在 <a href="/2016/07/27/redis-notification/">Redis Notification</a> 中展示了將 Redis 的異動通知 PHP 程式的技術，現在要應用 SSE 進一步將異動傳達給客戶端。<br>首先將伺服器端的程式 notify.php 改寫為可以發送 SSE 訊息的程式，將原本的輸出轉換成 SSE 格式並停用輸出緩衝，還要注意 Web Server 如果會緩衝輸出也要先停用。<br>改寫後的程式 getUpdates.php 如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author: simon</div><div class="line"> */</div><div class="line"><span class="keyword">require</span> <span class="keyword">__DIR__</span>.<span class="string">'/vendor/autoload.php'</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">LocalStorage</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">private</span> $product_store = []; <span class="comment">// 目前所有 products</span></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 使用前更新目前所有 products</div><div class="line">     * <span class="doctag">@param</span> \Predis\Client $client_sync</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">(\Predis\Client $client_sync)</span></span></div><div class="line">    &#123;</div><div class="line">        $all_product_keys = $client_sync-&gt;keys(<span class="string">'product:*'</span>);</div><div class="line">        <span class="keyword">foreach</span> ($all_product_keys <span class="keyword">as</span> $product_key) &#123;</div><div class="line">            <span class="comment">// 抓取 id</span></div><div class="line">            preg_match(<span class="string">'/product:(\d+)/'</span>, $product_key, $matches);</div><div class="line">            $id = $matches[<span class="number">1</span>];</div><div class="line">            <span class="comment">// 設定 id=&gt;product 關聯</span></div><div class="line">            <span class="keyword">$this</span>-&gt;product_store[$id] = $client_sync-&gt;hgetall($product_key);</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 排序 product_store</span></div><div class="line">        ksort(<span class="keyword">$this</span>-&gt;product_store);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 判斷 id 是否在 product_store 內</div><div class="line">     * <span class="doctag">@param</span> $id</div><div class="line">     * <span class="doctag">@return</span> bool</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">contains</span><span class="params">($id)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;product_store[$id])) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 處理新增事件</div><div class="line">     * <span class="doctag">@param</span> $id</div><div class="line">     * <span class="doctag">@param</span> $product</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">insertHandler</span><span class="params">($id, $product)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"event: add"</span> . PHP_EOL;</div><div class="line">        <span class="keyword">echo</span> <span class="string">'data: &#123;"id": "'</span>.$id.<span class="string">'", "name": "'</span>.$product[<span class="string">'name'</span>].<span class="string">'", "price": "'</span>.$product[<span class="string">'price'</span>].<span class="string">'", "stock": "'</span>.$product[<span class="string">'stock'</span>].<span class="string">'"&#125;'</span>;</div><div class="line">        <span class="keyword">echo</span> PHP_EOL.PHP_EOL;</div><div class="line">        ob_flush();</div><div class="line">        flush();</div><div class="line">        <span class="keyword">$this</span>-&gt;product_store[$id] = $product;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 處理更改事件</div><div class="line">     * <span class="doctag">@param</span> $id</div><div class="line">     * <span class="doctag">@param</span> $product</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">updateHandler</span><span class="params">($id, $product)</span></span></div><div class="line">    &#123;</div><div class="line">        $data = [];</div><div class="line">        $data[<span class="string">'id'</span>] = $id;</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;product_store[$id][<span class="string">'name'</span>] !== $product[<span class="string">'name'</span>]) &#123;</div><div class="line">            $data[<span class="string">'name'</span>] = $product[<span class="string">'name'</span>];</div><div class="line">            <span class="keyword">$this</span>-&gt;product_store[$id][<span class="string">'name'</span>] = $product[<span class="string">'name'</span>];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;product_store[$id][<span class="string">'price'</span>] !== $product[<span class="string">'price'</span>]) &#123;</div><div class="line">            $data[<span class="string">'price'</span>] = $product[<span class="string">'price'</span>];</div><div class="line">            <span class="keyword">$this</span>-&gt;product_store[$id][<span class="string">'price'</span>] = $product[<span class="string">'price'</span>];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;product_store[$id][<span class="string">'stock'</span>] !== $product[<span class="string">'stock'</span>]) &#123;</div><div class="line">            $data[<span class="string">'stock'</span>] = $product[<span class="string">'stock'</span>];</div><div class="line">            <span class="keyword">$this</span>-&gt;product_store[$id][<span class="string">'stock'</span>] = $product[<span class="string">'stock'</span>];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"event: update"</span>.PHP_EOL;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"data: "</span>;</div><div class="line">        <span class="keyword">echo</span> json_encode($data);</div><div class="line">        <span class="keyword">echo</span> PHP_EOL.PHP_EOL;</div><div class="line">        ob_flush();</div><div class="line">        flush();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 處理刪除事件</div><div class="line">     * <span class="doctag">@param</span> $id</div><div class="line">     * <span class="doctag">@param</span> $product</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">deleteHandler</span><span class="params">($id, $product)</span></span></div><div class="line">    &#123;</div><div class="line">        $product = <span class="keyword">$this</span>-&gt;product_store[$id];</div><div class="line">        $data = [];</div><div class="line">        $data[<span class="string">'id'</span>] = $id;</div><div class="line">        $data[<span class="string">'name'</span>] = $product[<span class="string">'name'</span>];</div><div class="line">        $data[<span class="string">'price'</span>] = $product[<span class="string">'price'</span>];</div><div class="line">        $data[<span class="string">'stock'</span>] = $product[<span class="string">'stock'</span>];</div><div class="line">        <span class="keyword">echo</span> <span class="string">"event: delete"</span>.PHP_EOL;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"data: "</span>;</div><div class="line">        <span class="keyword">echo</span> json_encode($data);</div><div class="line">        <span class="keyword">echo</span> PHP_EOL.PHP_EOL;</div><div class="line">        ob_flush();</div><div class="line">        flush();</div><div class="line">        <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;product_store[$id]);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">$client = <span class="keyword">new</span> Predis\Async\Client(<span class="string">'tcp://127.0.0.1:6379'</span>);</div><div class="line">$client_sync = <span class="keyword">new</span> Predis\Client(<span class="string">'tcp://127.0.0.1:6379'</span>);</div><div class="line"></div><div class="line">$local_storage = <span class="keyword">new</span> LocalStorage();</div><div class="line">$local_storage-&gt;init($client_sync);</div><div class="line"></div><div class="line">header(<span class="string">"Content-Type: text/event-stream"</span>); <span class="comment">// 設定 Server Send Event 的 Content-Type</span></div><div class="line">header(<span class="string">"Cache-Control: no-cache"</span>); <span class="comment">// 避免瀏覽器快取 Server Send Event 的內容</span></div><div class="line">header(<span class="string">"X-Accel-Buffering: no"</span>); <span class="comment">// 停用 Nginx 輸出緩衝控制</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 註冊處理 keyspace 異動的事件，並根據事件的訊息做相應的處理</div><div class="line"> */</div><div class="line">$client-&gt;connect(<span class="function"><span class="keyword">function</span> <span class="params">($client)</span> <span class="title">use</span> <span class="params">($client_sync, $local_storage)</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">// 使用 psubscribe 訂閱 product:#id 這種樣式的 key 被異動的事件</span></div><div class="line">    $client-&gt;pubSubLoop([<span class="string">'psubscribe'</span>=&gt;<span class="string">'__keyspace@*__:product:*'</span>],</div><div class="line">        <span class="function"><span class="keyword">function</span> <span class="params">($event, $pubsub)</span> <span class="title">use</span> <span class="params">($client_sync, $local_storage)</span> </span>&#123;</div><div class="line">            <span class="comment">// 當 product:#id 被異動的時候，根據事件發生的 channel 的名稱取得 key 的名稱和 product 的 id</span></div><div class="line">            <span class="keyword">if</span> (preg_match(<span class="string">'/__keyspace@\d+__:(product:(\d+))/'</span>, $event-&gt;channel, $matches)) &#123;</div><div class="line">                $product_key = $matches[<span class="number">1</span>];</div><div class="line">                $product_id = $matches[<span class="number">2</span>];</div><div class="line">                <span class="comment">// 取得被異動後，最新的 product 資料</span></div><div class="line">                $product = $client_sync-&gt;hgetall($product_key);</div><div class="line">                <span class="comment">// 根據事件傳來的訊息得知操作 key 的類型</span></div><div class="line">                $op = $event-&gt;payload;</div><div class="line">                <span class="keyword">if</span> ($op === <span class="string">'del'</span>) &#123;</div><div class="line">                    $local_storage-&gt;deleteHandler($product_id, $product);</div><div class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> ($op === <span class="string">'hset'</span>) &#123;</div><div class="line">                    <span class="comment">// 當操作類型是 hset 的時候，需要從目前的 product store 去判斷是新增還是修改</span></div><div class="line">                    <span class="keyword">if</span> ($local_storage-&gt;contains($product_id)) &#123;</div><div class="line">                        $local_storage-&gt;updateHandler($product_id, $product);</div><div class="line">                    &#125; <span class="keyword">else</span> &#123;</div><div class="line">                        $local_storage-&gt;insertHandler($product_id,$product);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">if</span> ($op === <span class="string">'quit'</span>) &#123;</div><div class="line">                    $pubsub-&gt;quit();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">&#125;);</div><div class="line"><span class="comment">// 開始監聽 keyspace 異動事件</span></div><div class="line">$client-&gt;getEventLoop()-&gt;run();</div></pre></td></tr></table></figure></p>
<p>為了要讓後來連線的程式能 follow 目前最新的結果，需要有一隻程式 getProductList.php 可以顯示目前最新的產品清單如下：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author: simon</div><div class="line"> */</div><div class="line"><span class="keyword">require</span> <span class="keyword">__DIR__</span>.<span class="string">'/vendor/autoload.php'</span>;</div><div class="line">$client_sync = <span class="keyword">new</span> Predis\Client(<span class="string">'tcp://127.0.0.1:6379'</span>);</div><div class="line">$all_product_keys = $client_sync-&gt;keys(<span class="string">'product:*'</span>);</div><div class="line">$product_store = [];</div><div class="line"><span class="keyword">foreach</span> ($all_product_keys <span class="keyword">as</span> $product_key) &#123;</div><div class="line">    <span class="comment">// 抓取 id</span></div><div class="line">    preg_match(<span class="string">'/product:(\d+)/'</span>, $product_key, $matches);</div><div class="line">    $id = $matches[<span class="number">1</span>];</div><div class="line">    <span class="comment">// 設定 id=&gt;product 關聯</span></div><div class="line">    $product_store[$id] = $client_sync-&gt;hgetall($product_key);</div><div class="line">&#125;</div><div class="line">$output = [];</div><div class="line"><span class="keyword">foreach</span> ($product_store <span class="keyword">as</span> $id =&gt; $product) &#123;</div><div class="line">    $output[] = [<span class="string">"id"</span> =&gt; $id, <span class="string">"name"</span> =&gt; $product[<span class="string">'name'</span>], <span class="string">"price"</span> =&gt; $product[<span class="string">'price'</span>], <span class="string">"stock"</span> =&gt; $product[<span class="string">'stock'</span>]];</div><div class="line">&#125;</div><div class="line"><span class="keyword">echo</span> json_encode($output);</div></pre></td></tr></table></figure>
<p>現在可以開始寫瀏覽器端的程式了，需要的程式檔案列表如下：</p>
<table>
<thead>
<tr>
<th>file name</th>
<th>description</th>
</tr>
</thead>
<tbody>
<tr>
<td>main.js</td>
<td>負責整合各部分程式碼並操作 DOM</td>
</tr>
<tr>
<td>ProductList.js</td>
<td>負責管理商品清單的資料</td>
</tr>
<tr>
<td>ProductListException.js</td>
<td>代表 ProductList 發生異常的物件</td>
</tr>
<tr>
<td>ServerSendEventHandler.js</td>
<td>負責處理產品清單異動的事件</td>
</tr>
<tr>
<td>ServerSendEventHandlerException.js</td>
<td>代表 ServerSendEventHandler 發生異常的物件</td>
</tr>
</tbody>
</table>
<p>main.js:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by simon on 9/4/16.</div><div class="line"> */</div><div class="line"><span class="keyword">import</span> ServerSendEventHandler <span class="keyword">from</span> <span class="string">'./ServerSendEventHandler.js'</span>;</div><div class="line"><span class="keyword">import</span> ProductList <span class="keyword">from</span> <span class="string">'./ProductList.js'</span>;</div><div class="line"></div><div class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">let</span> product_list = <span class="keyword">new</span> ProductList();</div><div class="line">    <span class="keyword">let</span> sse_handler = <span class="keyword">new</span> ServerSendEventHandler();</div><div class="line">    <span class="comment">// 新連線的頁面先更新最新產品清單</span></div><div class="line">    product_list.loadList(<span class="string">'./getProductList.php'</span>);</div><div class="line">    <span class="comment">// 將產品清單的資訊顯示在頁面上</span></div><div class="line">    <span class="keyword">let</span> tbody = <span class="built_in">document</span>.getElementById(<span class="string">"product_list"</span>);</div><div class="line">    makeTableFromProductList(tbody, product_list.getProductList());</div><div class="line">    <span class="comment">// 設定當產品異動時要進行的各種處理，這邊主要是更新產品清單資料 product_list 和修改頁面上顯示的資訊</span></div><div class="line">    sse_handler.addEventHandler(ServerSendEventHandler.ADD, product_list.addItem.bind(product_list));</div><div class="line">    sse_handler.addEventHandler(ServerSendEventHandler.ADD, insertRow.bind(<span class="literal">undefined</span>, tbody));</div><div class="line">    sse_handler.addEventHandler(ServerSendEventHandler.UPDATE, product_list.updateItem.bind(product_list));</div><div class="line">    sse_handler.addEventHandler(ServerSendEventHandler.UPDATE, updateRow);</div><div class="line">    sse_handler.addEventHandler(ServerSendEventHandler.DELETE, product_list.deleteItemById.bind(product_list));</div><div class="line">    sse_handler.addEventHandler(ServerSendEventHandler.DELETE, deleteRow.bind(<span class="literal">undefined</span>, tbody));</div><div class="line">    <span class="comment">// 開始監聽產品異動事件並進行相應處理</span></div><div class="line">    sse_handler.listen(<span class="string">"./getUpdates.php"</span>);</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 顯示產品清單</div><div class="line"> * @param tbody</div><div class="line"> * @param product_list</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">makeTableFromProductList</span> (<span class="params">tbody, product_list</span>) </span>&#123;</div><div class="line">    <span class="keyword">let</span> docfrag = <span class="built_in">document</span>.createDocumentFragment();</div><div class="line">    product_list.forEach(product =&gt; insertRow(docfrag, product));</div><div class="line">    tbody.appendChild(docfrag);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 插入產品</div><div class="line"> * @param tbody</div><div class="line"> * @param product</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">insertRow</span> (<span class="params">tbody, product</span>) </span>&#123;</div><div class="line">    <span class="keyword">let</span> tr = <span class="built_in">document</span>.createElement(<span class="string">"tr"</span>);</div><div class="line">    <span class="keyword">let</span> &#123;id, name, price, stock&#125; = product;</div><div class="line">    tr.setAttribute(<span class="string">'id'</span>, id);</div><div class="line">    <span class="keyword">let</span> td_name = <span class="built_in">document</span>.createElement(<span class="string">'td'</span>);</div><div class="line">    <span class="keyword">let</span> td_price = <span class="built_in">document</span>.createElement(<span class="string">'td'</span>);</div><div class="line">    <span class="keyword">let</span> td_stock = <span class="built_in">document</span>.createElement(<span class="string">'td'</span>);</div><div class="line">    td_name.textContent = name;</div><div class="line">    td_name.setAttribute(<span class="string">'name'</span>,<span class="string">'name'</span>);</div><div class="line">    td_price.textContent = price;</div><div class="line">    td_price.setAttribute(<span class="string">'name'</span>,<span class="string">'price'</span>);</div><div class="line">    td_stock.textContent = stock;</div><div class="line">    td_stock.setAttribute(<span class="string">'name'</span>,<span class="string">'stock'</span>);</div><div class="line">    tr.appendChild(td_name);</div><div class="line">    tr.appendChild(td_price);</div><div class="line">    tr.appendChild(td_stock);</div><div class="line">    tbody.appendChild(tr);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 更新產品</div><div class="line"> * @param product</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateRow</span> (<span class="params">product</span>) </span>&#123;</div><div class="line">    <span class="keyword">let</span> id = product.id;</div><div class="line">    <span class="keyword">let</span> tr = <span class="built_in">document</span>.getElementById(id);</div><div class="line">    <span class="keyword">if</span> (tr === <span class="literal">null</span>) &#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> product) &#123;</div><div class="line">        <span class="keyword">if</span> (<span class="built_in">Object</span>.prototype.hasOwnProperty.call(product, key)) &#123;</div><div class="line">            <span class="keyword">let</span> updating_td = tr.querySelector(<span class="string">`td[name="<span class="subst">$&#123;key&#125;</span>"]`</span>);</div><div class="line">            <span class="keyword">if</span> (updating_td !== <span class="literal">null</span>) &#123;</div><div class="line">                updating_td.textContent = product[key];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 刪除產品</div><div class="line"> * @param tbody</div><div class="line"> * @param product</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">deleteRow</span> (<span class="params">tbody, product</span>) </span>&#123;</div><div class="line">    <span class="keyword">let</span> id = product.id;</div><div class="line">    <span class="keyword">let</span> tr = <span class="built_in">document</span>.getElementById(id);</div><div class="line">    <span class="keyword">if</span> (tr !== <span class="literal">null</span>) &#123;</div><div class="line">        tbody.removeChild(tr);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>ProductList.js:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by simon on 9/4/16.</div><div class="line"> */</div><div class="line"><span class="keyword">import</span> ProductListException <span class="keyword">from</span> <span class="string">'./ProductListException.js'</span>;</div><div class="line"><span class="comment">/**</span></div><div class="line"> * 維護本地產品列表的物件</div><div class="line"> */</div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductList</span> </span>&#123;</div><div class="line">    <span class="keyword">constructor</span> () &#123;</div><div class="line">        <span class="keyword">this</span>.product_list = [];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 從 Server 取得目前所有產品列表</div><div class="line">     * @param url Server Url</div><div class="line">     */</div><div class="line">    loadList (url) &#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">let</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</div><div class="line">            <span class="comment">// 因為這個方法必須確實取得資料才能回傳，所以使用同步版本的 xhr</span></div><div class="line">            xhr.open(<span class="string">"GET"</span>, url, <span class="literal">false</span>);</div><div class="line">            xhr.send();</div><div class="line">            <span class="keyword">let</span> result = <span class="built_in">JSON</span>.parse(xhr.responseText);</div><div class="line">            <span class="keyword">this</span>.product_list = result;</div><div class="line">            <span class="keyword">return</span> result;</div><div class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ProductListException(<span class="string">`Error #1: Cannot load product list from remote server: <span class="subst">$&#123;url&#125;</span>.`</span>)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 取得產品列表</div><div class="line">     * @returns &#123;Array|*&#125;</div><div class="line">     */</div><div class="line">    getProductList () &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.product_list;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 增加產品</div><div class="line">     * @param item</div><div class="line">     */</div><div class="line">    addItem (item) &#123;</div><div class="line">         <span class="keyword">this</span>.product_list.push(item);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 刪除產品</div><div class="line">     * @param deleting_item</div><div class="line">     */</div><div class="line">    deleteItemById (deleting_item) &#123;</div><div class="line">        <span class="keyword">let</span> index = <span class="keyword">this</span>.product_list.findIndex(item =&gt; deleting_item.id === item.id);</div><div class="line">        <span class="keyword">if</span> (index === <span class="number">-1</span>) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ProductListException(<span class="string">`Error #2: Delete product error, no such product id: <span class="subst">$&#123;deleting_item.id&#125;</span>.`</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">this</span>.product_list.splice(index,<span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 更新產品</div><div class="line">     * @param updating_item</div><div class="line">     */</div><div class="line">    updateItem (updating_item) &#123;</div><div class="line">        <span class="keyword">let</span> index = <span class="keyword">this</span>.product_list.findIndex(item =&gt; item.id === updating_item.id);</div><div class="line">        <span class="keyword">if</span> (index === <span class="number">-1</span>) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ProductListException(<span class="string">`Error #3: Update product error, no such product id: <span class="subst">$&#123;updating_item.id&#125;</span>.`</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 更新產品部分資訊</span></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> prop <span class="keyword">in</span> updating_item) &#123;</div><div class="line">            <span class="keyword">if</span> (<span class="built_in">Object</span>.prototype.hasOwnProperty.call(updating_item, prop)) &#123;</div><div class="line">                <span class="keyword">this</span>.product_list[index][prop] = updating_item[prop];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>ProductListException.js:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by simon on 9/4/16.</div><div class="line"> */</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * ProductList 專屬 Exception</div><div class="line"> */</div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductListException</span>  <span class="keyword">extends</span> <span class="title">Error</span> </span>&#123;</div><div class="line">    <span class="keyword">constructor</span>(message) &#123;</div><div class="line">        <span class="keyword">super</span>(message);</div><div class="line">        <span class="keyword">this</span>.name = <span class="keyword">this</span>.constructor.name;</div><div class="line">        <span class="keyword">this</span>.message = message;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>ServerSendEventHandler.js:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by simon on 9/4/16.</div><div class="line"> */</div><div class="line"></div><div class="line"><span class="keyword">import</span> ServerSendEventHandlerException <span class="keyword">from</span> <span class="string">'./ServerSendEventHandlerException.js'</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> ADD = <span class="number">0</span>; <span class="comment">// 產品新增事件代碼</span></div><div class="line"><span class="keyword">const</span> UPDATE = <span class="number">1</span>; <span class="comment">// 產品修改事件代碼</span></div><div class="line"><span class="keyword">const</span> DELETE = <span class="number">2</span>; <span class="comment">// 產品刪除事件代碼</span></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Server Send Event 處理物件</div><div class="line"> */</div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerSendEventHandler</span> </span>&#123;</div><div class="line">    <span class="keyword">constructor</span> () &#123;</div><div class="line">        <span class="keyword">this</span>.update_events = [];</div><div class="line">        <span class="keyword">this</span>.delete_events = [];</div><div class="line">        <span class="keyword">this</span>.add_events = [];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 取得產品新增事件代碼</div><div class="line">     * @returns &#123;number&#125;</div><div class="line">     * @constructor</div><div class="line">     */</div><div class="line">    <span class="keyword">static</span> get ADD () &#123;</div><div class="line">        <span class="keyword">return</span> ADD;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 取得產品修改事件代碼</div><div class="line">     * @returns &#123;number&#125;</div><div class="line">     * @constructor</div><div class="line">     */</div><div class="line">    <span class="keyword">static</span> get UPDATE () &#123;</div><div class="line">        <span class="keyword">return</span> UPDATE;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 取得產品刪除事件代碼</div><div class="line">     * @returns &#123;number&#125;</div><div class="line">     * @constructor</div><div class="line">     */</div><div class="line">    <span class="keyword">static</span> get DELETE () &#123;</div><div class="line">        <span class="keyword">return</span> DELETE;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 開始監聽 Server Send Event 並進行處理</div><div class="line">     * @param url</div><div class="line">     */</div><div class="line">    listen (url) &#123;</div><div class="line">        <span class="keyword">if</span> ([<span class="keyword">this</span>.update_events.length, <span class="keyword">this</span>.delete_events.length, <span class="keyword">this</span>.add_events.length].includes(<span class="number">0</span>)) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ServerSendEventHandlerException(<span class="string">`Error #2: Event handlers must be specified before listing event.`</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">let</span> event_source = <span class="keyword">new</span> EventSource(url);</div><div class="line">        event_source.addEventListener(<span class="string">'add'</span>,  (e) =&gt; &#123;</div><div class="line">            <span class="keyword">let</span> response_data = <span class="built_in">JSON</span>.parse(e.data);</div><div class="line">            <span class="keyword">this</span>.add_events.forEach( event_handler =&gt; event_handler(response_data));</div><div class="line">        &#125;, <span class="literal">false</span>);</div><div class="line">        event_source.addEventListener(<span class="string">'update'</span>,  (e) =&gt; &#123;</div><div class="line">            <span class="keyword">let</span> response_data = <span class="built_in">JSON</span>.parse(e.data);</div><div class="line">            <span class="keyword">this</span>.update_events.forEach(event_handler =&gt; event_handler(response_data));</div><div class="line">        &#125;, <span class="literal">false</span>);</div><div class="line">        event_source.addEventListener(<span class="string">'delete'</span>, (e) =&gt; &#123;</div><div class="line">            <span class="keyword">let</span> response_data = <span class="built_in">JSON</span>.parse(e.data);</div><div class="line">            <span class="keyword">this</span>.delete_events.forEach(event_handler =&gt; event_handler(response_data));</div><div class="line">        &#125;, <span class="literal">false</span>);</div><div class="line">        event_source.onerror = (e) =&gt; &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ServerSendEventHandlerException(<span class="string">`Error #4: Server send event failed: <span class="subst">$&#123;e&#125;</span>.`</span>);</div><div class="line">        &#125;;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 附加事件處理函數</div><div class="line">     * @param event_type</div><div class="line">     * @param event_handler</div><div class="line">     */</div><div class="line">    addEventHandler (event_type, event_handler) &#123;</div><div class="line">        <span class="keyword">switch</span> (event_type) &#123;</div><div class="line">            <span class="keyword">case</span> ServerSendEventHandler.ADD:</div><div class="line">                <span class="keyword">this</span>.add_events.push(event_handler);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> ServerSendEventHandler.UPDATE:</div><div class="line">                <span class="keyword">this</span>.update_events.push(event_handler);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> ServerSendEventHandler.DELETE:</div><div class="line">                <span class="keyword">this</span>.delete_events.push(event_handler);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">default</span>:</div><div class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> ServerSendEventHandlerException(<span class="string">`Error #1: Invalid event types: <span class="subst">$&#123;event_type&#125;</span>.`</span>);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 移除事件處理函數</div><div class="line">     * @param event_type</div><div class="line">     * @param event_handler</div><div class="line">     */</div><div class="line">    removeEventHandler (event_type, event_handler) &#123;</div><div class="line">        <span class="keyword">let</span> index;</div><div class="line">        <span class="keyword">switch</span> (event_type) &#123;</div><div class="line">            <span class="keyword">case</span> ServerSendEventHandler.ADD:</div><div class="line">                index = <span class="keyword">this</span>.add_events.findIndex(item =&gt; <span class="built_in">Object</span>.is(item, event_handler));</div><div class="line">                <span class="keyword">if</span> (index === <span class="number">-1</span>) &#123;</div><div class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> ServerSendEventHandlerException(<span class="string">`Error #3: No such event handler.`</span>);</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">this</span>.add_events.splice(index, <span class="number">1</span>);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> ServerSendEventHandler.UPDATE:</div><div class="line">                index = <span class="keyword">this</span>.update_events.findIndex(item =&gt; <span class="built_in">Object</span>.is(item, event_handler));</div><div class="line">                <span class="keyword">if</span> (index === <span class="number">-1</span>) &#123;</div><div class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> ServerSendEventHandlerException(<span class="string">`Error #3: No such event handler.`</span>);</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">this</span>.update_events.splice(index, <span class="number">1</span>);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> ServerSendEventHandler.DELETE:</div><div class="line">                index = <span class="keyword">this</span>.delete_events.findIndex(item =&gt; <span class="built_in">Object</span>.is(item, event_handler));</div><div class="line">                <span class="keyword">if</span> (index === <span class="number">-1</span>) &#123;</div><div class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> ServerSendEventHandlerException(<span class="string">`Error #3: No such event handler.`</span>);</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">this</span>.delete_events.splice(index, <span class="number">1</span>);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">default</span>:</div><div class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> ServerSendEventHandlerException(<span class="string">`Error #1: Invalid event types: <span class="subst">$&#123;event_type&#125;</span>.`</span>);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>ServerSendEventHandlerException.js:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by simon on 9/4/16.</div><div class="line"> */</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * ServerSendEventHandler 專屬 Exception</div><div class="line"> */</div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerSendEventHandlerException</span>  <span class="keyword">extends</span> <span class="title">Error</span> </span>&#123;</div><div class="line">    <span class="keyword">constructor</span>(message) &#123;</div><div class="line">        <span class="keyword">super</span>(message);</div><div class="line">        <span class="keyword">this</span>.name = <span class="keyword">this</span>.constructor.name;</div><div class="line">        <span class="keyword">this</span>.message = message;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>為了讓 ECMAScript 2015 的程式碼能夠順利在瀏覽器上執行，我使用了 <a href="https://babeljs.io/" target="_blank" rel="external">Babel</a> 和 <a href="https://webpack.github.io/" target="_blank" rel="external">webpack</a> 將這些 js 轉成 ECMAScript 5 並整合成一個 bundle.js 檔案給 main.html 載入。</p>
<p>最後的主要進入頁面如下 main.html:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"bundle.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>產品名稱<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>價格<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>庫存<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tbody</span> <span class="attr">id</span>=<span class="string">"product_list"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>整個專案的程式可以在 <a href="https://github.com/smjhang/demos/tree/master/server-send-event" target="_blank" rel="external">GitHub</a>下載。</p>
<h2 id="開始測試"><a href="#開始測試" class="headerlink" title="開始測試"></a>開始測試</h2><p>首先在 Redis 插入起始資料:<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">HMSET <span class="built_in">product</span>:<span class="number">1</span> <span class="keyword">name</span> <span class="string">'芭樂'</span>   price <span class="number">5</span> stock <span class="number">99</span></div><div class="line">HMSET <span class="built_in">product</span>:<span class="number">2</span> <span class="keyword">name</span> <span class="string">'西瓜'</span>   price <span class="number">5</span> stock <span class="number">99</span></div><div class="line">HMSET <span class="built_in">product</span>:<span class="number">3</span> <span class="keyword">name</span> <span class="string">'蓮霧'</span>   price <span class="number">5</span> stock <span class="number">99</span></div><div class="line">HMSET <span class="built_in">product</span>:<span class="number">4</span> <span class="keyword">name</span> <span class="string">'鳳梨'</span>   price <span class="number">5</span> stock <span class="number">99</span></div><div class="line">HMSET <span class="built_in">product</span>:<span class="number">5</span> <span class="keyword">name</span> <span class="string">'蘋果'</span>   price <span class="number">5</span> stock <span class="number">99</span></div><div class="line">HMSET <span class="built_in">product</span>:<span class="number">6</span> <span class="keyword">name</span> <span class="string">'奇異果'</span> price <span class="number">5</span> stock <span class="number">99</span></div><div class="line">HMSET <span class="built_in">product</span>:<span class="number">7</span> <span class="keyword">name</span> <span class="string">'香蕉'</span>   price <span class="number">5</span> stock <span class="number">99</span></div><div class="line">HMSET <span class="built_in">product</span>:<span class="number">8</span> <span class="keyword">name</span> <span class="string">'荔枝'</span>   price <span class="number">5</span> stock <span class="number">99</span></div></pre></td></tr></table></figure></p>
<p>進入頁面:<br><img src="/2016/09/08/server-send-event/main.jpg" alt="第一次進入" title="第一次進入"></p>
<p>在 Redis 新增資料:<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">HMSET <span class="built_in">product</span>:<span class="number">9</span> <span class="keyword">name</span> <span class="string">'小玉西瓜'</span> price <span class="number">15</span> stock <span class="number">79</span></div></pre></td></tr></table></figure></p>
<p>查看頁面:<br><img src="/2016/09/08/server-send-event/insert.jpg" alt="新增資料" title="新增資料"></p>
<p>在 Redis 修改資料:<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">HMSET <span class="built_in">product</span>:<span class="number">9</span> <span class="keyword">name</span> <span class="string">'小玉西瓜'</span> price <span class="number">15</span> stock <span class="number">75</span></div></pre></td></tr></table></figure></p>
<p>查看頁面:<br><img src="/2016/09/08/server-send-event/update.jpg" alt="修改資料" title="修改資料"></p>
<p>在 Redis 刪除資料:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">DEL</span> <span class="selector-tag">product</span><span class="selector-pseudo">:9</span></div></pre></td></tr></table></figure></p>
<p>查看頁面:<br><img src="/2016/09/08/server-send-event/delete.jpg" alt="刪除資料" title="刪除資料"></p>
<h1 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h1><p>沿續了 <a href="/2016/07/27/redis-notification/">Redis Notification</a> 一文中關於 Redis 推送資料的範例，本篇進一步使用 SSE 將此資料異動通知給瀏覽器，並且嘗試使用 ES 20015 來進行開發。從測試結果可以看到 SSE 確實能即時通知瀏覽器最新的資訊。<br>雖然 SSE 可以沿用網頁伺服器而不需要自行開發伺服器程式，但是對於 SSE 的運作原理還是要有足夠深入了解，才能了解應該如何設定網頁伺服器，並且注意到許多安全性以及系統架構上的問題。<br>在投入正式產品環境之前，還是要再經過謹慎的評估和測試才能運用。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;簡介&quot;&gt;&lt;a href=&quot;#簡介&quot; class=&quot;headerlink&quot; title=&quot;簡介&quot;&gt;&lt;/a&gt;簡介&lt;/h1&gt;&lt;p&gt;HTML 5 Server Send Event (SSE) 是一種將資料從伺服器端推送到瀏覽器端的技術。與 Ajax polling 這種多次發送 HTTP 請求的的方式相比，SSE 只需要一次的 HTTP 請求，因此能減少連線次數及傳輸的資料量、降低伺服器的負擔，並讓使用者得到更即時的資訊。&lt;br&gt;而與 Web Socket 相較，它沿用 HTTP 協定，不需要再額外建立專門處理其他協定的伺服端程式，直接沿用原本的網頁伺服器（如：Apache, Nginx）即可。所以無論是在程式開發上還是維運管理上都要簡易很多。&lt;br&gt;因此，如果只需要單向的從伺服器到瀏覽器的推送，就不需要使用 Web Socket，可以只使用 SSE。接續 &lt;a href=&quot;/2016/07/27/redis-notification/&quot;&gt;Redis Notification&lt;/a&gt; 中提到的 Redis 通知 PHP 程式的技術，本篇將展示如何使用 SSE 將 Redis 的更新同步到瀏覽器，並使用 ECMAScript 2015 的新功能來組織程式。&lt;/p&gt;
    
    </summary>
    
    
      <category term="HTML5" scheme="https://smjhang.github.io/tags/HTML5/"/>
    
      <category term="ES2015" scheme="https://smjhang.github.io/tags/ES2015/"/>
    
  </entry>
  
  <entry>
    <title>Redis Notification</title>
    <link href="https://smjhang.github.io/2016/07/27/redis-notification/"/>
    <id>https://smjhang.github.io/2016/07/27/redis-notification/</id>
    <published>2016-07-27T14:49:42.000Z</published>
    <updated>2016-11-09T22:41:23.282Z</updated>
    
    <content type="html"><![CDATA[<h1 id="簡介"><a href="#簡介" class="headerlink" title="簡介"></a>簡介</h1><p>在實現事件驅動設計的過程中，能夠讓資料庫在異動資料時自動發出通知是一個重要的環節，如此一來就不需要有另外一支程式不斷去查詢資料庫的異動，可以節省系統資源。<br>本篇探討將使用 Redis 的 keyspace notification 功能來實現資料異動的即時通知，並且以 PHP 程式來實作。<br>本篇將會以一個線上購物網站的物品庫存清單為例，展示如何實作即時顯示當前貨品庫存量的功能。</p>
<a id="more"></a>
<h1 id="Redis-資料結構規劃"><a href="#Redis-資料結構規劃" class="headerlink" title="Redis 資料結構規劃"></a>Redis 資料結構規劃</h1><p>商品的資料儲存在 product:#id 的 hash，<br>並建立一個 set 用來維護商品清單。</p>
<table>
<thead>
<tr>
<th>data type</th>
<th>key</th>
<th>description</th>
</tr>
</thead>
<tbody>
<tr>
<td>set</td>
<td>product_ids</td>
<td>商品總類清單</td>
</tr>
<tr>
<td>hash</td>
<td>product:#id</td>
<td>商品細節</td>
</tr>
</tbody>
</table>
<caption>表1: 資料結構規劃</caption>

<p><caption>建立 Redis 資料</caption></p>
<pre><code>HMSET product:1 name &quot;多力多滋組合包-綜合 54g*4包/組&quot; price 55 stock 256
HMSET product:2 name &quot;【洋芋片】Lays樂事瑞士香濃起司 97g/包&quot; price 32 stock 179
HMSET product:3 name &quot;【蔓莓纖果】萬歲牌蔓莓纖果150G&quot;  price 59 stock 326
HMSET product:4 name &quot;【蒜香青豆】盛香珍蒜香青豆 240g/包&quot; price 42 stock 324
HMSET product:5 name &quot;【義美】義美小泡芙（檸檬風味）171g/盒&quot; price 64 stock 64
HMSET product:6 name &quot;【洋芋片】波的多超厚切洋芋片-蚵仔煎味&quot; price 53 stock 182
HMSET product:7 name &quot;【義美】義美小蛋卷（原味）&quot; price 49 stock 313
HMSET product:8 name &quot;品客碳烤BBQ口味洋芋片&quot; price 55 stock 158
SADD products 1
SADD products 2
SADD products 3
SADD products 4
SADD products 5
SADD products 6
SADD products 7
SADD products 8
</code></pre><h1 id="Redis-keyspace-notification"><a href="#Redis-keyspace-notification" class="headerlink" title="Redis keyspace notification"></a>Redis keyspace notification</h1><p>為了讓物品庫存數量能即時反應到應用程式，必須讓資料庫將資料的異動反應給應用程式，<br>這邊說明如何使用 Redis 的 keyspace notification 功能來實現異動事件通知。<br>至於更詳細的說明可以看 <a href="http://redis.io/topics/notifications" title="Redis Keyspace Notifications" target="_blank" rel="external">官網說明文件</a>。</p>
<p>keyspace notification 可讓應用程式訂閱 keyspace 更動的事件，<br>當 Redis 的資料有異動的時候有兩種類型的事件會被觸發：</p>
<ol>
<li>第一種讓我們可以監聽某個 key 是否被異動，當它被異動的時候，我們可以得知異動這個 key 的命令類型，稱為 keyspace 事件。</li>
<li>第二種讓我們可以監聽是否有某個命令類型被執行，當它被執行時，透過這個事件，我們可以得知被這個命令影響到的 key，稱為 keyevent 事件。</li>
</ol>
<p>Redis 的事件通知是透過 PUB/SUB 來進行的，因此再使用前需先了解 Redis PUB/SUB 是如何進行的。<br>可以參考官網的文件 <a href="http://redis.io/topics/pubsub" title="Redis PUB/SUB" target="_blank" rel="external">Redis PUB/SUB</a>。簡單來說就是一個客戶端訂閱了某個 channel, 另外一個客戶端可以發佈訊息到這個 channel,<br>然後前面那個訂閱的客戶端就可以收到第二個客戶端發送過來的訊息了。在 Redis keyspace notification 的應用中，Redis 會負責發佈訊息到指定的 channel, 我們只要接收這些訊息就可以了。<br>後面會討論這些 channel。</p>
<p>在使用 keyspace notification 前，需要先打開這個功能，編輯 redis.conf 將 notify-keyspace-events 設成：</p>
<pre><code>notify-keyspace-events &quot;KEA&quot;
</code></pre><p>根據官網的說明，<br>K - Keyspace events<br>E - Keyevent event<br>A - All commands<br>KEA 代表要訂閱所有命令類型的第一種和第二種事件。<br>更改設定檔要重啟 Redis 後才會生效。</p>
<p>Redis 的事件通知是透過 PUB/SUB 來進行的，因此當上述兩種事件發生的時候，Redis 會分別發佈訊息到以下兩種 channel 上：</p>
<pre><code>1. PUBLISH __keyspace@&lt;db id&gt;__:&lt;key name&gt; &lt;command type&gt;
2. PUBLISH __keyevent@&lt;db id&gt;__:&lt;command type&gt; &lt;key name&gt; 
</code></pre><p>我們可以透過 PSUBSCRIBE 來訂閱這些事件：</p>
<pre><code>1. PSUBSCRIBE __keyspace@*__:*
2. PSUBSCRIBE __keyevent@*__:*
</code></pre><p>假設我們要觀察 del test1 test2 test3 test4 指令對 keyspace 和 keyevent 的影響可以分別訂閱以下兩個 channel</p>
<pre><code>127.0.0.1:6379&gt; PSUBSCRIBE __keyspace@*__:test*
Reading messages... (press Ctrl-C to quit)
1) &quot;psubscribe&quot;
2) &quot;__keyspace@*__:test*&quot;
3) (integer) 1

127.0.0.1:6379&gt; PSUBSCRIBE __keyevent@*__:del
Reading messages... (press Ctrl-C to quit)
1) &quot;psubscribe&quot;
2) &quot;__keyevent@*__:del&quot;
3) (integer) 1
</code></pre><p>設定要處理的 key</p>
<pre><code>127.0.0.1:6379&gt; set test1 test1
OK
127.0.0.1:6379&gt; set test2 test2
OK
127.0.0.1:6379&gt; set test3 test3
OK
127.0.0.1:6379&gt; set test4 test4
</code></pre><p>注意我這邊開了三個 terminal，分別執行三個 redis-cli，一個監聽對 test* 的異動，一個監聽 del 操作是否被執行，最後一個負責下各種指令。 </p>
<p>在建立過程中，可以看到對 keyspace 的監聽訊息如下：</p>
<pre><code>127.0.0.1:6379&gt; PSUBSCRIBE __keyspace@*__:test*
Reading messages... (press Ctrl-C to quit)
1) &quot;psubscribe&quot;
2) &quot;__keyspace@*__:test*&quot;
3) (integer) 1
1) &quot;pmessage&quot;
2) &quot;__keyspace@*__:test*&quot;
3) &quot;__keyspace@0__:test1&quot;
4) &quot;set&quot;
1) &quot;pmessage&quot;
2) &quot;__keyspace@*__:test*&quot;
3) &quot;__keyspace@0__:test2&quot;
4) &quot;set&quot;
1) &quot;pmessage&quot;
2) &quot;__keyspace@*__:test*&quot;
3) &quot;__keyspace@0__:test3&quot;
4) &quot;set&quot;
1) &quot;pmessage&quot;
2) &quot;__keyspace@*__:test*&quot;
3) &quot;__keyspace@0__:test4&quot;
4) &quot;set&quot;
</code></pre><p>注意 127.0.0.1:6379&gt; PSUBSCRIBE <strong>keyevent@*</strong>:del 那個 redis-cli 沒有任何更新，因為沒有任何 del 操作被執行。<br>現在刪除 test, tests, test3, test4：</p>
<pre><code>127.0.0.1:6379&gt; del test1 test2 test3 test4
(integer) 4
</code></pre><p>可以看到對 keyspace (127.0.0.1:6379&gt; PSUBSCRIBE <strong>keyspace@*</strong>:test*) 的監聽如下：</p>
<pre><code>1) &quot;pmessage&quot;
2) &quot;__keyspace@*__:test*&quot;
3) &quot;__keyspace@0__:test1&quot;
4) &quot;del&quot;
1) &quot;pmessage&quot;
2) &quot;__keyspace@*__:test*&quot;
3) &quot;__keyspace@0__:test2&quot;
4) &quot;del&quot;
1) &quot;pmessage&quot;
2) &quot;__keyspace@*__:test*&quot;
3) &quot;__keyspace@0__:test3&quot;
4) &quot;del&quot;
1) &quot;pmessage&quot;
2) &quot;__keyspace@*__:test*&quot;
3) &quot;__keyspace@0__:test4&quot;
4) &quot;del&quot;
</code></pre><p>對 keyevent (127.0.0.1:6379&gt; PSUBSCRIBE <strong>keyevent@*</strong>:del)的監聽如下：</p>
<pre><code>1) &quot;pmessage&quot;
2) &quot;__keyevent@*__:del&quot;
3) &quot;__keyevent@0__:del&quot;
4) &quot;test1&quot;
1) &quot;pmessage&quot;
2) &quot;__keyevent@*__:del&quot;
3) &quot;__keyevent@0__:del&quot;
4) &quot;test2&quot;
1) &quot;pmessage&quot;
2) &quot;__keyevent@*__:del&quot;
3) &quot;__keyevent@0__:del&quot;
4) &quot;test3&quot;
1) &quot;pmessage&quot;
2) &quot;__keyevent@*__:del&quot;
3) &quot;__keyevent@0__:del&quot;
4) &quot;test4&quot;
</code></pre><p>從上面的結果我們可以知道一個命令對多個 key 的操作，是會引發多次 keyspace 事件和 keyevent 事件的。<br>然後我們透過這些事件只能知道是甚麼 key 被影響、被甚麼指令影響，而不知道 key 被異動後的資料，如果想要知道 key 的最新資料則要自己再去讀取那個 key。</p>
<h1 id="使用-Predis-在-PHP-中操作-Redis"><a href="#使用-Predis-在-PHP-中操作-Redis" class="headerlink" title="使用 Predis 在 PHP 中操作 Redis"></a>使用 Predis 在 PHP 中操作 Redis</h1><p>建立一個 redis-notify 專案</p>
<pre><code>mkdir redis-notofy
</code></pre><p>我們這邊使用 composer 來取得 Predis Async, 使用非同步版本的 Predis 比較適合這種監聽事件的任務。<br>關於 composer 的使用可以參考 <a href="https://getcomposer.org/" title="Composer" target="_blank" rel="external">composer 官網說明文件</a>。<br>關於 Predis Async 的介紹可以參考 <a href="https://packagist.org/packages/predis/predis" target="_blank" rel="external">Predis Async</a>。</p>
<p>在該專案內建立 composer.json 如下：</p>
<pre><code>{
  &quot;require&quot;:{&quot;predis/predis-async&quot;:&quot;dev-master&quot;}
}
</code></pre><p>執行  composer install  來從 Packagist 下載 Predis-Async</p>
<pre><code>compsoer install
</code></pre><p>可以開始用 Predis 了，編輯程式檔 notify.php 如下：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">require</span> <span class="keyword">__DIR__</span>.<span class="string">'/vendor/autoload.php'</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">LocalStorage</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">private</span> $product_store = []; <span class="comment">// 目前所有 products</span></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 使用前更新目前所有 products</div><div class="line">     * <span class="doctag">@param</span> \Predis\Client $client_sync</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">(\Predis\Client $client_sync)</span></span></div><div class="line">    &#123;</div><div class="line">        $all_product_keys = $client_sync-&gt;keys(<span class="string">'product:*'</span>);</div><div class="line">        <span class="keyword">foreach</span> ($all_product_keys <span class="keyword">as</span> $product_key) &#123;</div><div class="line">            <span class="comment">// 抓取 id</span></div><div class="line">            preg_match(<span class="string">'/product:(\d+)/'</span>, $product_key, $matches);</div><div class="line">            $id = $matches[<span class="number">1</span>];</div><div class="line">            <span class="comment">// 設定 id=&gt;product 關聯</span></div><div class="line">            <span class="keyword">$this</span>-&gt;product_store[$id] = $client_sync-&gt;hgetall($product_key);</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 排序 product_store</span></div><div class="line">        ksort(<span class="keyword">$this</span>-&gt;product_store);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 判斷 id 是否在 product_store 內</div><div class="line">     * <span class="doctag">@param</span> $id</div><div class="line">     * <span class="doctag">@return</span> bool</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">contains</span><span class="params">($id)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;product_store[$id])) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 處理新增事件</div><div class="line">     * <span class="doctag">@param</span> $id</div><div class="line">     * <span class="doctag">@param</span> $product</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">insertHandler</span><span class="params">($id, $product)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"新增 product_store 項目:\n"</span>;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"id: $id\n"</span>;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"name: &#123;$product['name']&#125;\n"</span>;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"price: &#123;$product['price']&#125;\n"</span>;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"stock: &#123;$product['stock']&#125;\n\n"</span>;</div><div class="line">        <span class="keyword">$this</span>-&gt;product_store[$id] = $product;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 處理更改事件</div><div class="line">     * <span class="doctag">@param</span> $id</div><div class="line">     * <span class="doctag">@param</span> $product</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">updateHandler</span><span class="params">($id, $product)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"更改 product_store 項目:\n"</span>;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"id: $id\n"</span>;</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;product_store[$id][<span class="string">'name'</span>] !== $product[<span class="string">'name'</span>]) &#123;</div><div class="line">            <span class="keyword">echo</span> <span class="string">"name: &#123;$product['name']&#125;\n"</span>;</div><div class="line">            <span class="keyword">$this</span>-&gt;product_store[$id][<span class="string">'name'</span>] = $product[<span class="string">'name'</span>];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;product_store[$id][<span class="string">'price'</span>] !== $product[<span class="string">'price'</span>]) &#123;</div><div class="line">            <span class="keyword">echo</span> <span class="string">"price: &#123;$product['price']&#125;\n"</span>;</div><div class="line">            <span class="keyword">$this</span>-&gt;product_store[$id][<span class="string">'price'</span>] = $product[<span class="string">'price'</span>];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;product_store[$id][<span class="string">'stock'</span>] !== $product[<span class="string">'stock'</span>]) &#123;</div><div class="line">            <span class="keyword">echo</span> <span class="string">"stock: &#123;$product['stock']&#125;\n"</span>;</div><div class="line">            <span class="keyword">$this</span>-&gt;product_store[$id][<span class="string">'stock'</span>] = $product[<span class="string">'stock'</span>];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"\n"</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 處理刪除事件</div><div class="line">     * <span class="doctag">@param</span> $id</div><div class="line">     * <span class="doctag">@param</span> $product</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">deleteHandler</span><span class="params">($id, $product)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"刪除 product_store 項目:\n"</span>;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"id: $id\n\n"</span>;</div><div class="line">        <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;product_store[$id]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 顯示 product_store</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">showStore</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;product_store <span class="keyword">as</span> $id =&gt; $product) &#123;</div><div class="line">            <span class="keyword">echo</span> <span class="string">"id: $id\n"</span>;</div><div class="line">            <span class="keyword">echo</span> <span class="string">"name: &#123;$product['name']&#125;\n"</span>;</div><div class="line">            <span class="keyword">echo</span> <span class="string">"price: &#123;$product['price']&#125;\n"</span>;</div><div class="line">            <span class="keyword">echo</span> <span class="string">"stock: &#123;$product['stock']&#125;\n"</span>;</div><div class="line">            <span class="keyword">echo</span> <span class="string">"----------------------------------------------\n"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">$client = <span class="keyword">new</span> Predis\Async\Client(<span class="string">'tcp://127.0.0.1:6379'</span>);</div><div class="line">$client_sync = <span class="keyword">new</span> Predis\Client(<span class="string">'tcp://127.0.0.1:6379'</span>);</div><div class="line"></div><div class="line">$local_storage = <span class="keyword">new</span> LocalStorage();</div><div class="line">$local_storage-&gt;init($client_sync);</div><div class="line">$local_storage-&gt;showStore();</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 註冊處理 keyspace 異動的事件，並根據事件的訊息做相應的處理</div><div class="line"> */</div><div class="line">$client-&gt;connect(<span class="function"><span class="keyword">function</span> <span class="params">($client)</span> <span class="title">use</span> <span class="params">($client_sync, $local_storage)</span> </span>&#123;</div><div class="line">    <span class="comment">// 使用 psubscribe 訂閱 product:#id 這種樣式的 key 被異動的事件</span></div><div class="line">    $client-&gt;pubSubLoop([<span class="string">'psubscribe'</span>=&gt;<span class="string">'__keyspace@*__:product:*'</span>],</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="params">($event, $pubsub)</span> <span class="title">use</span> <span class="params">($client_sync, $local_storage)</span> </span>&#123;</div><div class="line">        <span class="comment">// 當 product:#id 被異動的時候，根據事件發生的 channel 的名稱取得 key 的名稱和 product 的 id</span></div><div class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/__keyspace@\d+__:(product:(\d+))/'</span>, $event-&gt;channel, $matches)) &#123;</div><div class="line">            $product_key = $matches[<span class="number">1</span>];</div><div class="line">            $product_id = $matches[<span class="number">2</span>];</div><div class="line">            <span class="comment">// 取得被異動後，最新的 product 資料</span></div><div class="line">            $product = $client_sync-&gt;hgetall($product_key);</div><div class="line">            <span class="comment">// 根據事件傳來的訊息得知操作 key 的類型</span></div><div class="line">            $op = $event-&gt;payload;</div><div class="line">            <span class="keyword">if</span> ($op === <span class="string">'del'</span>) &#123;</div><div class="line">                $local_storage-&gt;deleteHandler($product_id, $product);</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> ($op === <span class="string">'hset'</span>) &#123;</div><div class="line">                <span class="comment">// 當操作類型是 hset 的時候，需要從目前的 product store 去判斷是新增還是修改</span></div><div class="line">                <span class="keyword">if</span> ($local_storage-&gt;contains($product_id)) &#123;</div><div class="line">                    $local_storage-&gt;updateHandler($product_id, $product);</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    $local_storage-&gt;insertHandler($product_id,$product);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;);</div><div class="line"><span class="comment">// 開始監聽 keyspace 異動事件</span></div><div class="line">$client-&gt;getEventLoop()-&gt;run();</div></pre></td></tr></table></figure>
<p>這個程式維護一個本地的商品清單，並且隨時接收 Redis 的最新異動來更新本地清單。<br>首先先建立一個 LocalStorage 物件來管理本地商品清單的增刪查改。<br>然後使用 Predis Async 來訂閱所有關於 product：* 的異動，<br>Redis 的 keyspace notification 對要監聽的每個 key 都建立一個 channel<br>要訂閱的 channel 樣式如下：</p>
<pre><code>__keyspace@*__:product:*
</code></pre><p>然後當資料異動事件發生的時候，可以取得 channel 的名稱和從 channel 傳遞過來的訊息：</p>
<pre><code>channel 的名稱： __keyspace@0__:product:1
channel 的訊息： hset
</code></pre><p>因此我們可以從 channel 的名稱取得被異動的 key 的名稱 product:1，當然也可以只取得部份的 key 名稱 1，來作為 id。<br>然後可以從 channel 傳遞過來的訊息得知是甚麼操作異動了 key，這裡是 hset。<br>關於各種類型的操作會傳遞甚麼訊息可以查看官網的說明 <a href="http://redis.io/topics/notifications" title="Redis Keyspace Notifications" target="_blank" rel="external">官網說明文件</a>。<br>詳細的程式可以在 <a href="https://github.com/smjhang/demos" target="_blank" rel="external">我的 github 上的 demos 專案</a> 下載，放在 redis-notify 資料夾內。</p>
<p>執行程式可以看到以下結果：</p>
<pre><code>simon@simon:~/demos/redis-notify$ php notify.php 
id: 1
name: 多力多滋組合包-綜合 54g*4包/組
price: 55
stock: 256
----------------------------------------------
id: 2
name: 【洋芋片】Lays樂事瑞士香濃起司 97g/包
price: 32
stock: 179
----------------------------------------------
id: 3
name: 【蔓莓纖果】萬歲牌蔓莓纖果150G
price: 59
stock: 326
----------------------------------------------
id: 4
name: 【蒜香青豆】盛香珍蒜香青豆 240g/包
price: 42
stock: 324
----------------------------------------------
id: 5
name: 【義美】義美小泡芙（檸檬風味）171g/盒
price: 64
stock: 64
----------------------------------------------
id: 6
name: 【洋芋片】波的多超厚切洋芋片-蚵仔煎味
price: 53
stock: 182
----------------------------------------------
id: 7
name: 【義美】義美小蛋卷（原味）
price: 49
stock: 313
----------------------------------------------
id: 8
name: 品客碳烤BBQ口味洋芋片
price: 55
stock: 158
----------------------------------------------
</code></pre><p>另外開一個 Redis client 來異動資料：</p>
<pre><code>simon@simon:~/demos$ redis-cli
127.0.0.1:6379&gt; HMSET product:9 name &apos;旺旺 仙貝經濟包&apos; price 469 stock 79
OK
127.0.0.1:6379&gt; HMSET product:9 name &apos;旺旺 仙貝經濟包&apos; price 469 stock 75
OK
127.0.0.1:6379&gt; DEL product:9
(integer) 1
127.0.0.1:6379&gt; 
</code></pre><p>可以在 notify.php 的輸出畫面看到新的訊息：</p>
<pre><code>新增 product_store 項目:
id: 9
name: 旺旺 仙貝經濟包
price: 469
stock: 79

更改 product_store 項目:
id: 9
stock: 75

刪除 product_store 項目:
id: 9
</code></pre><h1 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h1><p>這邊介紹 Redis 如何實現資料異動通知的功能。不過要注意的是 Redis 不會保存通知過的訊息，因此如果對 Redis 的連線斷線的話，斷線的應用程式是無法再取得斷線期間的異動通知。<br>如果非常在意事件一定要通知到的話，要自己想辦法把事件保留起來，官網上說未來 Redis 可能會將這些通知保留再另外的 SET 內，不過現階段還沒有，可能要自己實作保存事件的部份。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;簡介&quot;&gt;&lt;a href=&quot;#簡介&quot; class=&quot;headerlink&quot; title=&quot;簡介&quot;&gt;&lt;/a&gt;簡介&lt;/h1&gt;&lt;p&gt;在實現事件驅動設計的過程中，能夠讓資料庫在異動資料時自動發出通知是一個重要的環節，如此一來就不需要有另外一支程式不斷去查詢資料庫的異動，可以節省系統資源。&lt;br&gt;本篇探討將使用 Redis 的 keyspace notification 功能來實現資料異動的即時通知，並且以 PHP 程式來實作。&lt;br&gt;本篇將會以一個線上購物網站的物品庫存清單為例，展示如何實作即時顯示當前貨品庫存量的功能。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Redis" scheme="https://smjhang.github.io/tags/Redis/"/>
    
  </entry>
  
</feed>
